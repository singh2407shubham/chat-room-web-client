{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamsingh/Projects/WebChat/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT, {\n      withCredentials: true,\n      transportOptions: {\n        polling: {\n          extraHeaders: {\n            \"my-custom-header\": \"abcd\"\n          }\n        }\n      }\n    });\n    setName(name);\n    setRoom(room);\n    console.log(socket);\n  }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"d0IL40A6in8C0M9kpYxzMuyI8u0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/shubhamsingh/Projects/WebChat/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","ENDPOINT","parse","search","withCredentials","transportOptions","polling","extraHeaders","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,QAAQ,GAAG,gBAAjB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACM,MAAAA,IAAD;AAAME,MAAAA;AAAN,QAAcP,WAAW,CAACU,KAAZ,CAAkBN,QAAQ,CAACO,MAA3B,CAApB;AAEAT,IAAAA,MAAM,GAAGD,EAAE,CAACQ,QAAD,EAAU;AACjBG,MAAAA,eAAe,EAAE,IADA;AAEjBC,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,OAAO,EAAE;AACLC,UAAAA,YAAY,EAAE;AACV,gCAAoB;AADV;AADT;AADK;AAFD,KAAV,CAAX;AAYAT,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACH,GAnBQ,EAmBN,CAACO,QAAD,EAAWL,QAAQ,CAACO,MAApB,CAnBM,CAAT;AAqBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA7BD;;GAAMR,I;;KAAAA,I;AA+BN,eAAeA,IAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nlet socket;\n\nconst Chat = ({location}) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const ENDPOINT = 'localhost:5000';\n\n    useEffect(() => {\n        const {name,room} = queryString.parse(location.search);\n\n        socket = io(ENDPOINT,{\n            withCredentials: true,\n            transportOptions: {\n                polling: {\n                    extraHeaders: {\n                        \"my-custom-header\": \"abcd\"\n                    }\n                }\n            }\n\n        });\n\n        setName(name);\n        setRoom(room);\n\n        console.log(socket);\n    }, [ENDPOINT, location.search]);\n\n    return (\n        <h1>Chat</h1>\n    )\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}